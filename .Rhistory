rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
install.packages("mapview")
rmarkdown::render()
rmarkdown::render(encoding = "UTF-8")
library(mapview)
rmarkdown::render(encoding = "UTF-8")
rmarkdown::render(encoding = "UTF-8")
12376+3869+1665+3107.3
12376.61+3868.14+1664.7+3107.23
21016.68+1000+500
rmarkdown::render(encoding = 'UTF-8')
rmarkdown::render(encoding = "UTF-8")
rmarkdown::render(encoding = "UTF-8")
rmarkdown::render(encoding = UTF-8)
rmarkdown::render(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
knitr::opts_chunk$set(echo = TRUE)
library(sp)
library(rgdal)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(leaflet.extras)
library(mapview)
library(raster)
proApicola <- readOGR("geodata/INEGI_DENUE_21012019_APICOLA/INEGI_DENUE_21012019.shp",
"INEGI_DENUE_21012019", verbose=FALSE)
#dim(proApicola@data)
x0 <- rep("Producto apícola",84)
#names(proApicola@data)
#head(proApicola@data)
proApicola@data <- cbind(proApicola@data, x0)
proMiel <- readOGR("geodata/INEGI_DENUE_21012019_MIEL/INEGI_DENUE_21012019.shp",
"INEGI_DENUE_21012019", verbose=FALSE)
x1 <- c(3000055,427213,4552918,1662213,1587565,1963586,2565829,701212,979385,237899,1571621,1426730,3096733,450223,1751907,2666869,3636718,1685250,1934039,1322255,3666076,4282468,3518984)
ueMiel <- subset(proMiel, proMiel@data$codigo_act == 311221
| proMiel@data$codigo_act == 311999
| proMiel@data$codigo_act == 321920
| proMiel@data$codigo_act == 325412
| proMiel@data$codigo_act == 325610
| proMiel@data$codigo_act == 431194
| proMiel@data$codigo_act == 431199
| proMiel@data$codigo_act == 461190
| proMiel@data$codigo_act == 461130
| proMiel@data$codigo_act == 461140
| proMiel@data$codigo_act == 461150
| proMiel@data$codigo_act == 464113
| proMiel@data$codigo_act == 493130
| is.element(proMiel@data$id, x1)
)
x0 <- rep("Venta de Miel",length(ueMiel@data[,1]))
ueMiel@data <- cbind(ueMiel@data, x0)
ueMielApic <- raster::bind(ueMiel, proApicola)
quakes.df <- split(ueMielApic, ueMielApic$x0)
l <- leaflet() %>% addTiles() %>%
addFullscreenControl()
names(quakes.df) %>%
purrr::walk( function(df) {
l <<- l %>%
addMarkers(data=quakes.df[[df]],
group = df,
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = F),
popup = paste0( "<strong>id: </strong>", quakes.df[[df]]$id, "</br>",
"<strong>NOMBRE_ESTABLECIMIENTO: </strong>", quakes.df[[df]]$nom_estab, "</br>",
"<strong>TIPO: </strong>", quakes.df[[df]]$nombre_act, "</br>",
"<strong>MUNICIPIO: </strong>", quakes.df[[df]]$municipio, "</br>",
"<strong>ENTIDAD: </strong>", quakes.df[[df]]$entidad
)
)
})
l %>%
addMiniMap(toggleDisplay = TRUE, position = "bottomleft") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479")%>%
addEasyButton(easyButton(
icon="fa-crosshairs",
title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }"))) %>%
addLayersControl(
overlayGroups = names(quakes.df),
options = layersControlOptions(collapsed = FALSE)
) %>% addMouseCoordinates()  %>%
addHomeButton(extent(proMiel), layer.name = "i",  position = "topleft")
knitr::opts_chunk$set(echo = TRUE)
library(sp)
library(rgdal)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(leaflet.extras)
library(mapview)
library(raster)
proApicola <- readOGR("geodata/INEGI_DENUE_21012019_APICOLA/INEGI_DENUE_21012019.shp",
"INEGI_DENUE_21012019", verbose=FALSE)
#dim(proApicola@data)
x0 <- rep("Producto apícola",84)
#names(proApicola@data)
#head(proApicola@data)
proApicola@data <- cbind(proApicola@data, x0)
proMiel <- readOGR("geodata/INEGI_DENUE_21012019_MIEL/INEGI_DENUE_21012019.shp",
"INEGI_DENUE_21012019", verbose=FALSE)
x1 <- c(3000055,427213,4552918,1662213,1587565,1963586,2565829,701212,979385,237899,1571621,1426730,3096733,450223,1751907,2666869,3636718,1685250,1934039,1322255,3666076,4282468,3518984)
ueMiel <- subset(proMiel, proMiel@data$codigo_act == 311221
| proMiel@data$codigo_act == 311999
| proMiel@data$codigo_act == 321920
| proMiel@data$codigo_act == 325412
| proMiel@data$codigo_act == 325610
| proMiel@data$codigo_act == 431194
| proMiel@data$codigo_act == 431199
| proMiel@data$codigo_act == 461190
| proMiel@data$codigo_act == 461130
| proMiel@data$codigo_act == 461140
| proMiel@data$codigo_act == 461150
| proMiel@data$codigo_act == 464113
| proMiel@data$codigo_act == 493130
| is.element(proMiel@data$id, x1)
)
x0 <- rep("Venta de Miel",length(ueMiel@data[,1]))
ueMiel@data <- cbind(ueMiel@data, x0)
ueMielApic <- raster::bind(ueMiel, proApicola)
quakes.df <- split(ueMielApic, ueMielApic$x0)
l <- leaflet() %>% addTiles() %>%
addFullscreenControl()
names(quakes.df) %>%
purrr::walk( function(df) {
l <<- l %>%
addMarkers(data=quakes.df[[df]],
group = df,
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = F),
popup = paste0( "<strong>id: </strong>", quakes.df[[df]]$id, "</br>",
"<strong>NOMBRE_ESTABLECIMIENTO: </strong>", quakes.df[[df]]$nom_estab, "</br>",
"<strong>TIPO: </strong>", quakes.df[[df]]$nombre_act, "</br>",
"<strong>MUNICIPIO: </strong>", quakes.df[[df]]$municipio, "</br>",
"<strong>ENTIDAD: </strong>", quakes.df[[df]]$entidad
)
)
})
l %>%
addMiniMap(toggleDisplay = TRUE, position = "bottomleft") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479")%>%
addEasyButton(easyButton(
icon="fa-crosshairs",
title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }"))) %>%
addLayersControl(
overlayGroups = names(quakes.df),
options = layersControlOptions(collapsed = FALSE)
) %>% addMouseCoordinates()  %>%
addHomeButton(extent(proMiel), layer.name = "i",  position = "topleft")
install.packages("mapview")
knitr::opts_chunk$set(echo = TRUE)
library(sp)
library(rgdal)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(leaflet.extras)
library(mapview)
library(raster)
proApicola <- readOGR("geodata/INEGI_DENUE_21012019_APICOLA/INEGI_DENUE_21012019.shp",
"INEGI_DENUE_21012019", verbose=FALSE)
#dim(proApicola@data)
x0 <- rep("Producto apícola",84)
#names(proApicola@data)
#head(proApicola@data)
proApicola@data <- cbind(proApicola@data, x0)
proMiel <- readOGR("geodata/INEGI_DENUE_21012019_MIEL/INEGI_DENUE_21012019.shp",
"INEGI_DENUE_21012019", verbose=FALSE)
x1 <- c(3000055,427213,4552918,1662213,1587565,1963586,2565829,701212,979385,237899,1571621,1426730,3096733,450223,1751907,2666869,3636718,1685250,1934039,1322255,3666076,4282468,3518984)
ueMiel <- subset(proMiel, proMiel@data$codigo_act == 311221
| proMiel@data$codigo_act == 311999
| proMiel@data$codigo_act == 321920
| proMiel@data$codigo_act == 325412
| proMiel@data$codigo_act == 325610
| proMiel@data$codigo_act == 431194
| proMiel@data$codigo_act == 431199
| proMiel@data$codigo_act == 461190
| proMiel@data$codigo_act == 461130
| proMiel@data$codigo_act == 461140
| proMiel@data$codigo_act == 461150
| proMiel@data$codigo_act == 464113
| proMiel@data$codigo_act == 493130
| is.element(proMiel@data$id, x1)
)
x0 <- rep("Venta de Miel",length(ueMiel@data[,1]))
ueMiel@data <- cbind(ueMiel@data, x0)
ueMielApic <- raster::bind(ueMiel, proApicola)
quakes.df <- split(ueMielApic, ueMielApic$x0)
l <- leaflet() %>% addTiles() %>%
addFullscreenControl()
names(quakes.df) %>%
purrr::walk( function(df) {
l <<- l %>%
addMarkers(data=quakes.df[[df]],
group = df,
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = F),
popup = paste0( "<strong>id: </strong>", quakes.df[[df]]$id, "</br>",
"<strong>NOMBRE_ESTABLECIMIENTO: </strong>", quakes.df[[df]]$nom_estab, "</br>",
"<strong>TIPO: </strong>", quakes.df[[df]]$nombre_act, "</br>",
"<strong>MUNICIPIO: </strong>", quakes.df[[df]]$municipio, "</br>",
"<strong>ENTIDAD: </strong>", quakes.df[[df]]$entidad
)
)
})
l %>%
addMiniMap(toggleDisplay = TRUE, position = "bottomleft") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479")%>%
addEasyButton(easyButton(
icon="fa-crosshairs",
title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }"))) %>%
addLayersControl(
overlayGroups = names(quakes.df),
options = layersControlOptions(collapsed = FALSE)
) %>% addMouseCoordinates()  %>%
addHomeButton(extent(proMiel), layer.name = "i",  position = "topleft")
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site(encoding = "UTF-8")
