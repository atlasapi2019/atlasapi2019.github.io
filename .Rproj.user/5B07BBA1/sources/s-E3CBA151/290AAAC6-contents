
setwd("D://Geografía/atlasapi2019.github.io")

library(sp)
library(rgdal)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(leaflet.extras)
library(mapview)  
library(raster)
library(bitops)
library(rjson)


proApicola <- readOGR("geodata/INEGI_DENUE_21012019_APICOLA/INEGI_DENUE_21012019.shp",
                      "INEGI_DENUE_21012019", verbose=FALSE)
#dim(proApicola@data)
x0 <- rep("Producto apícola",84)
#names(proApicola@data)
#head(proApicola@data)
proApicola@data <- cbind(proApicola@data, x0)



proMiel <- readOGR("geodata/INEGI_DENUE_21012019_MIEL/INEGI_DENUE_21012019.shp",
                   "INEGI_DENUE_21012019", verbose=FALSE)
x1 <- c(3000055,427213,4552918,1662213,1587565,1963586,2565829,701212,979385,237899,1571621,1426730,3096733,450223,1751907,2666869,3636718,1685250,1934039,1322255,3666076,4282468,3518984)

ueMiel <- subset(proMiel, proMiel@data$codigo_act == 311221
                 | proMiel@data$codigo_act == 311999 
                 | proMiel@data$codigo_act == 321920
                 | proMiel@data$codigo_act == 325412
                 | proMiel@data$codigo_act == 325610
                 | proMiel@data$codigo_act == 431194
                 | proMiel@data$codigo_act == 431199
                 | proMiel@data$codigo_act == 461190
                 | proMiel@data$codigo_act == 461130 
                 | proMiel@data$codigo_act == 461140 
                 | proMiel@data$codigo_act == 461150
                 | proMiel@data$codigo_act == 464113
                 | proMiel@data$codigo_act == 493130 
                 | is.element(proMiel@data$id, x1)
)

x0 <- rep("Venta de Miel",length(ueMiel@data[,1]))
ueMiel@data <- cbind(ueMiel@data, x0)

ueMielApic <- raster::bind(ueMiel, proApicola)


geoservice <- "http://maps.googleapis.com/maps/api/geocode"
(address <- paste0(geoservice, "/json?sensor=false&"))
origin <- fromJSON(file=address)
destination <- fromJSON(file=address)
o <- origin$results$
d <- destination$results$
(url <- paste0("http://router.project-osrm.org/route/v1/driving/", 
               o$lng,",",o$lat,";",d$lng,",",d$lat,"?overview=full"))
route <- fromJSON(file=url)


quakes.df <- split(ueMielApic, ueMielApic$x0)

l <- leaflet() %>% addTiles() %>%
  addFullscreenControl() %>%
  addPolylines(data=path, popup=routelabel, color = "#000000", opacity=1, weight = 3) %>%
  addMarkers(lng=o$lng, lat=o$lat) %>%
  addMarkers(lng=d$lng, lat=d$lat)

names(quakes.df) %>%
  purrr::walk( function(df) {
    l <<- l %>%
      addMarkers(data=quakes.df[[df]],
                 group = df,
                 clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = F),
                 
                 popup = paste0( "<strong>id: </strong>", quakes.df[[df]]$id, "</br>",
                                 "<strong>NOMBRE_ESTABLECIMIENTO: </strong>", quakes.df[[df]]$nom_estab, "</br>",
                                 "<strong>TIPO: </strong>", quakes.df[[df]]$nombre_act, "</br>",
                                 "<strong>MUNICIPIO: </strong>", quakes.df[[df]]$municipio, "</br>",
                                 "<strong>ENTIDAD: </strong>", quakes.df[[df]]$entidad
                 )
      )
  })



l %>% 
  
  addMiniMap(toggleDisplay = TRUE, position = "bottomleft") %>%
  addMeasure(
    position = "bottomleft",
    primaryLengthUnit = "meters",
    primaryAreaUnit = "sqmeters",
    activeColor = "#3D535D",
    completedColor = "#7D4479")%>%
  
  addEasyButton(easyButton(
    icon="fa-crosshairs", 
    title="Locate Me",
    onClick=JS("function(btn, map){ map.locate({setView: true}); }"))) %>%
  addLayersControl(
    overlayGroups = names(quakes.df),
    options = layersControlOptions(collapsed = FALSE)
  ) %>% addMouseCoordinates()  %>%
  addHomeButton(extent(proMiel), layer.name = "i",  position = "topleft") 



